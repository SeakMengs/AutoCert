meta {
  name: Get project by id
  type: http
  seq: 3
}

get {
  url: {{url}}/api/v1/projects/306696da-9f29-409b-b8bf-a494f3238e44
  body: multipartForm
  auth: none
}

docs {
  Type information
  
  type ProjectRole int
  
  const (
  	ProjectRoleOwner ProjectRole = iota
  	ProjectRoleSignatory
  	ProjectRoleNone
  )
  
  type SignatoryStatus int
  
  const (
  	SignatoryStatusNotInvited SignatoryStatus = iota
  	SignatoryStatusInvited
  	SignatoryStatusSigned
  )
  
  type ProjectSignatory struct {
  	Email      string                   `json:"email"`
  	ProfileUrl string                   `json:"profileUrl"`
  	Status     constant.SignatoryStatus `json:"status"`
  }
  
  type ProjectStatus int
  
  const (
  	ProjectStatusPreparing ProjectStatus = iota
  	ProjectStatusProcessing
  	ProjectStatusCompleted
  )
  
  type ProjectResponse struct {
  		ID          string                        `json:"id"`
  		Title       string                        `json:"title"`
  		TemplateUrl string                        `json:"templateUrl"`
  		IsPublic    bool                          `json:"isPublic"`
  		Signatories []repository.ProjectSignatory `json:"signatories"`
  		Status      constant.ProjectStatus        `json:"status"`
  		CreatedAt   *time.Time                    `json:"createdAt"`
  	}
  
  util.ResponseSuccess(ctx, gin.H{
  		"role": role,
  		"project": ProjectResponse{
  			ID:          project.ID,
  			Title:       project.Title,
  			TemplateUrl: templateUrl,
  			IsPublic:    project.IsPublic,
  			Signatories: signatories,
  			Status:      project.Status,
  			CreatedAt:   project.CreatedAt,
  		},
  	})
}
